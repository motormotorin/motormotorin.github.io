!function(e){var t={};function r(n){if(t[n])return t[n].exports;var a=t[n]={i:n,l:!1,exports:{}};return e[n].call(a.exports,a,a.exports,r),a.l=!0,a.exports}r.m=e,r.c=t,r.d=function(e,t,n){r.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},r.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.t=function(e,t){if(1&t&&(e=r(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)r.d(n,a,function(t){return e[t]}.bind(null,a));return n},r.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(t,"a",t),t},r.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},r.p="",r(r.s=0)}([function(e,t,r){"use strict";r.r(t);const n={sidebarSelector:document.querySelector(".sidebar-selector"),sidebarContainer:document.querySelector(".sidebar-container"),layersToolbar:document.querySelector(".layers-toolbar"),structureToolbar:document.querySelector(".structure-toolbar"),layersContainer:document.querySelector(".layers-container"),structureContainer:document.querySelector(".structure-container"),rightSidebar:document.querySelector(".right-sidebar")},a={editing:"editing",watching:"watching",creating:"creating"},s="loader";class i{constructor(e){this.searchType=e}async getLayers(){try{const e={id:12441,name:"Продуктовые магазины",markers:[{id:1,name:"Minimarket",description:"продуктовый магазин",address:{building:"B",level:6},worktime:{weekdays:"9:00 - 17:30",weekends:"выходной"},type:"POINT",coords:{lat:113.141313141,lng:12.190120441}},{id:2,name:"Minimarket",description:"продуктовый магазин",address:{building:"8.1",level:5},worktime:{weekdays:"9:00 - 17:30",weekends:"выходной"},type:"POINT",coords:{lat:113.141313141,lng:12.190120441}}]};this.layersArray=e}catch(e){alert(e)}}getLayerStructureById(e){let t=[this.layersArray].findIndex(t=>t.id==e);return[this.layersArray][t].markers}getStructObjById(e,t){return this.getLayerStructureById(e).find(e=>e.id==t)}}const l=()=>{n.structureContainer.innerHTML=""},c=e=>{const t=`\n        <div id="${e.id}"class="row struct-row">\n            <span class="layer-title-group">\n                <span>\n                    <img src="./media/file.svg">\n                </span>\n                <span>\n                    <input class="layer-name" value="${e.name}" disabled type="text" placeholder="Название слоя">\n                </span>\n            </span>\n            <button id="edit">\n                <img src="./media/edit.svg">\n            </button>\n        </div>\n    `;n.structureContainer.insertAdjacentHTML("afterbegin",t)},o=e=>{const t=n.structureContainer.querySelectorAll(".struct-row");Array.from(t).forEach(e=>{e.classList.remove("active")}),n.structureContainer.querySelector(`.struct-row[id="${e}"]`).classList.add("active")},d=()=>{n.rightSidebar.style.transform="translateX(100%)",n.rightSidebar.innerHTML=""},u=(e=null)=>{const t=(e=>e!=={}&&null!=e?e:{name:"",description:"",worktime:{weekdays:"",weekends:""},coords:{lat:"",lng:""},address:{level:"",building:""}})(e),r=`\n        <div class="data-cont">\n            <div class="line">\n                <label for="">Name</label>\n                <input type="text" id="name" value="${t.name}">\n            </div>\n            <div class="line">\n                <label for="">Description</label>\n                <input type="text" value="${t.description}">\n            </div>\n            <div class="main-line">Worktime</div>\n            <div class="line">\n                <label for="">Weakdays</label>\n                <input type="text" value="${t.worktime.weekdays}">\n            </div>\n            <div class="line">\n                <label for="">Holidays</label>\n                <input type="text" value="${t.worktime.weekends}">\n            </div>\n            <div class="main-line">Address</div>\n            <div class="line">\n                <label for="">Building</label>\n                <input type="text" value="${t.address.building}">\n            </div>\n            <div class="line">\n                <label for="">Level</label>\n                <input type="text" value="${t.address.level}">\n            </div>\n            <div class="main-line">Coords</div>\n            <div class="line">\n                <label for="">Latitude</label>\n                <input type="text" value="${t.coords.lat}">\n            </div>\n            <div class="line">\n                <label for="">Longitude</label>\n                <input type="text" value="${t.coords.lng}">\n            </div>\n            <div class="main-line">Marker icon</div>\n            <div class="line">\n                <label for="">Icon</label>\n                <input type="file">\n            </div>\n            <div class="buttons-line">\n                <button id="save-changes">Save</button>\n                <button id="cancel-changes">Cancel</button>\n            </div>\n        </div>\n    `;n.rightSidebar.style.transform="translateX(0%)",n.rightSidebar.insertAdjacentHTML("afterbegin",r)};var y=L.map("mapid").setView([43.02825898949743,131.89296126365664],13).setMaxBounds([[43.050952,131.85915],[42.994509,131.94232]]);L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",{minZoom:15,maxZoom:19,attribution:'&copy; <a href="https://openstreetmap.org/copyright">OpenStreetMap contributors</a>'}).addTo(y);const g={status:"watching"},v=async e=>{var t,r,a;if("layers-slctr"===e.target.id?g.currentDataType="layers":"buildings-slctr"===e.target.id&&(g.currentDataType="buildings"),t=e.target.id,r=document.querySelector("#layers-slctr"),a=document.querySelector("#buildings-slctr"),"layers-slctr"===t?(!r.classList.contains("active")&&r.classList.add("active"),a.classList.contains("active")&&a.classList.remove("active")):"buildings-slctr"===t&&(r.classList.contains("active")&&r.classList.remove("active"),!a.classList.contains("active")&&a.classList.add("active")),g.currentDataType){g.search=new i(g.currentDataType),n.layersContainer.innerHTML="",l(),n.layersContainer.insertAdjacentHTML("afterbegin",'\n        <div class="loader"></div>\n    ');try{await g.search.getLayers(),(()=>{const e=document.querySelector("."+s);e&&e.parentNode.removeChild(e)})(),[g.search.layersArray].forEach(e=>{(e=>{const t=`\n        <div id="${e.id}"class="row layer-row">\n            <span class="layer-title-group">\n                <span>\n                    <img src="./media/file.svg">\n                </span>\n                <span>\n                    <input class="layer-name" value="${e.name}" disabled type="text" placeholder="Название слоя">\n                </span>\n            </span>\n        </div>\n    `;n.layersContainer.insertAdjacentHTML("afterbegin",t)})(e)})}catch(e){console.log(e),alert("Ну и что ты делаешь?")}}};n.sidebarSelector.addEventListener("click",e=>{v(e)});n.layersContainer.addEventListener("click",e=>{var t=e.target.closest(".layer-row");t&&((e=>{const t=n.layersContainer.querySelectorAll(".layer-row");Array.from(t).forEach(e=>{e.classList.remove("active")}),n.layersContainer.querySelector(`.layer-row[id="${e}"]`).classList.add("active")})(t.id),(e=>{l(),g.currentLayer=e;g.search.getLayerStructureById(e).forEach(e=>{c(e)})})(t.id))}),n.structureContainer.addEventListener("click",e=>{const t=e.target.closest(".struct-row");if(t&&"layers"==g.currentDataType){o(t.id);let r=g.search.getStructObjById(g.currentLayer,t.id);r&&y.setView(r.coords),e.target.closest("#edit")&&(g.status=a.changing,d(),u(r))}}),n.layersToolbar.addEventListener("click",e=>{if(e.target.closest("#layers-acrd")){let t=e.target.closest("#layers-acrd");t.classList.contains("show")?(t.classList.replace("show","hide"),t.querySelector("img").style.transform="rotate(0deg)",n.layersContainer.style.height="0px"):t.classList.contains("hide")&&(t.classList.replace("hide","show"),t.querySelector("img").style.transform="rotate(90deg)",n.layersContainer.style.height="150px")}else e.target.closest("#add-layer")?console.log("add layer"):e.target.closest("#del-layer")&&console.log("del layer")}),n.structureToolbar.addEventListener("click",e=>{if(e.target.closest("#structure-acrd")){let t=e.target.closest("#structure-acrd");t.classList.contains("show")?(t.classList.replace("show","hide"),t.querySelector("img").style.transform="rotate(0deg)",n.structureContainer.style.cssText="flex-grow: 0; height: 0px;"):t.classList.contains("hide")&&(t.classList.replace("hide","show"),t.querySelector("img").style.transform="rotate(90deg)",n.structureContainer.style.flexGrow="1")}else if(e.target.closest("#add-struct")&&g.status==a.watching&&g.currentLayer){const e={name:"",id:"id"+(new Date).getTime().toString()};g.status=a.creating,g.newElementId=e.id,document.body.insertAdjacentHTML("beforeend",'\n        <div class="centered-marker">\n            <img src="../media/blue-pin-marker.svg"></img>\n        </div>\n    '),c(e),o(e.id),d(),u()}else e.target.closest("#del-struct")}),n.rightSidebar.addEventListener("click",e=>{e.target.closest("#cancel-changes")?(d(),(()=>{const e=document.querySelector(".centered-marker");e&&e.parentNode.removeChild(e)})(),g.newElementId&&(e=>{const t=n.structureContainer.querySelector("#"+e);t&&t.parentNode.removeChild(t)})(g.newElementId),g.newElementId=null,g.status=a.watching):e.target.closest("#save-changes")}),n.rightSidebar.addEventListener("input",e=>{"name"===e.target.id&&(e=>{const t=n.structureContainer.querySelector(".active");t&&(t.querySelector("input").value=e)})(e.target.value)})}]);